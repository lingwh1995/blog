透明模式的缺点是不够安全,因为叶子对象和容器本质上是有区别的。叶子对象是不可能有下一个层次的对象的,但是当叶子对象继承了抽象构建后,是有
管理下一层对象的功能了，如继承了抽象构建的add()、remove()等方法,当叶子组件调用这些方法的时候,编译阶段不会出问题,但是运行时会
报错，如果没有提供相应的错误处理代码,是不安全的。
推荐使用标准的组合模式:在抽象构件中将方法实现,并直接抛出异常,如:
public abstract class Componment {
	
    protected String organizationName;
    
	public void add(Componment componment) {
		throw new UnsupportedOperationException();
	}
	
	public void remove(Componment componment) {
		throw new UnsupportedOperationException();
	}
	
	public Componment getByIndex(int index) {
		throw new UnsupportedOperationException();
	}
	
	public abstract void show();
}
