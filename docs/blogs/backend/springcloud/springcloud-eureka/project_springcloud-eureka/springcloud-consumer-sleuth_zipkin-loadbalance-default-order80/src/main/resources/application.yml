server:
  port: 80
  tomcat:
    mbeanregistry:
      enabled: true
spring:
    application:
        name: SPRINGCLOUD-CONSUMER-SLEUTH-ZIPKIN-LOADBALANCE-DEFAULT-ORDER80 #注意:服务名不要出现_
    devtools:
      restart:
        enabled: true
    logging:
      level: info
    zipkin:
      base-url: http://localhost:9411
    sleuth:
      sampler:
        probability: 1  # span的采样率，默认为 0.1,这个值介于0到1之间

eureka:
  client:
    register-with-eureka: true  #表示是否将自己注册进EurekaServer默认为true。
    fetchRegistry: true  #是否从EurekaServer抓取已有的注册信息，默认为true。服务提供者是单节点无所谓，是集群必须设置为true才能配合ribbon使用负载均衡，否则报异常No instances available for SPRINGCLOUD-PROVIDER-PAYMENT-SERVICE-CLUSTER
    service-url:
      #单机版
      defaultZone: http://localhost:7001/eureka
      #集群版
      #defaultZone: http://eureka7002:7002/eureka,http://eureka7003:7003/eureka,http://eureka7004:7004/eureka
  instance:
    instance-id: ${spring.application.name} #Eureka仪表盘中Instances currently registered with Eureka.Status显示的内容
    prefer-ip-address: false #访问路径可以显示IP地址，点击Eureka仪表盘中Instances currently registered with Eureka.Status显示的内容地址栏是否显示IP地址

#服务提供方信息
service:
  provider:
    name: SPRINGCLOUD-PROVIDER-SLEUTH-ZIPKIN-PAYMENT-SERVICE-CLUSTER  #服务提供方名称
    url: http://${service.provider.name} #服务提供方调用地址