server:
  port: 7005 #访问端口
spring:
  application:
    name: SPRINGCLOUD-BASIC-SAMPLE-REGISTER-CENTER-SINGLE-NODE7005-TEST  #注意:服务名不要出现_
  devtools: #热部署开关
    restart:
      enabled: true
# 将Client作为服务注册到SpringBootAdmin Server端，通过Server来监听项目的运行情况
  boot:
    admin:
      client:
        #因为eureka的配置先加载所以可以使用${eureka.instance.ip-address}这个来动态获取ip,虽然这个键值对配置在下面
        url: http://localhost:${server.port}
eureka:
  instance:
    hostname: localhost
  client:
    register-with-eureka: true #不向注册中心注册自己
    fetch-registry: false #表示自己就是注册中心,我的职责就是维护实例,不需要去检索服务
    service-url:
      defaultZone: http://localhost:7005/eureka
  server:
    enable-self-preservation: true #是否开启自我保护,true:服务失效不直接剔除,false:服务失效直接剔除
    eviction-interval-timer-in-ms: 2000 #默认发送心跳的时间间隔,单位为ms

#配置文件修改说明-------------------------------------------------:开始
#注意:不同的部署环境需要修改的配置
#   1.${logback.path}  #修改日志存放位置,Linxu为/，Windows为\
#       修改原因: Linux和Windows目录结构不同
#配置文件修改说明-------------------------------------------------:结束

#自定义日志配置文件路径
logging:
  config: classpath:logback-custom.xml
  path: D:\repository\workspace\IDEA\PERSONAL\springcloud-eureka\log\ #所有日志存放在位置,加上\方便Linux环境下配置
  level:
    root: info #全局日志输出级别

logback:
  log-name: ${spring.application.name}
  append: false #是否启用append(追加到已经存在日志文件尾部),true:重启项目会追加新日志到之前日志,false:重启项目会清空之前的日志
  immediate-flush: true #是否启用immediateFlush(立即刷新),true:重启项目自动追加,false:重启项目会情况之前的日志
  deploy-machine-ip: localhost #当前微服务所在部署机器ip

#logstash相关配置:开始
logstash:
  host: 192.168.0.4:5044 # logstash地址
  index: '@project.parent.artifactId@' # es中index名称
#logstash相关配置:结束

#actuator监控:开始
#通过下面的配置启用所有的监控端点，默认情况下，这些端点是禁用的；
management:
  endpoints:
    web:
      exposure:
        include: '*'
    enabled-by-default: true
  endpoint:
    health:
      show-details: always # 访问/actuator/health时，显示详细信息，而不是仅仅显示"status": "UP"
    # 日志文件路径：特别注意,此处无法配置日志文件路径,因为rancher会生成虚拟ip,这个虚拟ip是无法在这里获取的,
    #           但是虚拟ip是路径的一部分,所以这个路径无法拼接出来,所以这里无法配置日志文件路径
    #logfile:
    #  external-file:
#actuator监控:结束