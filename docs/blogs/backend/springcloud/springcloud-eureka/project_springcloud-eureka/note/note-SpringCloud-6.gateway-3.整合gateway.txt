SpringCloud整合网关gateway实现路由转发、权限鉴定、限流、身份验证等操作
1.JAVA硬编码
    1>.网关直接转发请求模式
        1>>.编写POM
            <dependencies>
                <dependency>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-starter-gateway</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.openatom</groupId>
                    <artifactId>springcloud-api-commons</artifactId>
                </dependency>
            </dependencies>
        2>>.编写YML
            server:
              port: 9527

            spring:
              application:
                name: SPRINGCLOUD-ROUTER-CONNECT-DIRECT-HARDCODE-GATEWAY9527

            eureka:
              instance:
                hostname: ${spring.application.name}
              client: #服务提供者provider注册进eureka服务列表内
                service-url:
                  register-with-eureka: true
                  fetch-registry: true
                  defaultZone: http://localhost:7001/eureka
        3>>.编写路由规则类
            @Configuration
            public class GateWayConfig {

                @Bean
                public RouteLocator customRouteLocator(RouteLocatorBuilder routeLocatorBuilder){
                    RouteLocatorBuilder.Builder routes = routeLocatorBuilder.routes();
                    routes.route("payment_routh",
                            r -> r.path("/consumer/payment/**/get/**")
                                    .uri("http://localhost")).build();
                    return routes.build();
                }
            }
        4>>.编写路主启动类
            @SpringBootApplication
            @EnableDiscoveryClient
            public class RouterConnectDirectHardcodeGateWay9527 {
                public static void main(String[] args) {
                    SpringApplication.run(RouterConnectDirectHardcodeGateWay9527.class, args);
                }
            }
    2>.网关连接到注册中心负载均衡转发请求模式
        1>>.编写POM
            <dependencies>
                <dependency>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-starter-gateway</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.openatom</groupId>
                    <artifactId>springcloud-api-commons</artifactId>
                </dependency>
            </dependencies>
        2>>.编写YML
            server:
              port: 9527

            spring:
              application:
                name: SPRINGCLOUD-ROUTER-CONNECT-LOADBALANCE-HARDCODE-GATEWAY9527
              cloud:
                gateway:
                  discovery:
                    locator:
                      enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由

            eureka:
              instance:
                hostname: ${spring.application.name}
              client: #服务提供者provider注册进eureka服务列表内
                service-url:
                  register-with-eureka: true
                  fetch-registry: true
                  defaultZone: http://localhost:7001/eureka
        3>>.编写路由规则类
            @Configuration
            public class GateWayConfig {

                @Bean
                public RouteLocator customRouteLocator(RouteLocatorBuilder routeLocatorBuilder){
                    RouteLocatorBuilder.Builder routes = routeLocatorBuilder.routes();
                    routes.route("payment_routh",
                            r -> r.path("/consumer/payment/**/get/**")
                                    .uri("lb://SPRINGCLOUD-CONSUMER-HYSTRIX-LOADBALANCE-OPENFEIGN-CONFIGURATION-ORDER80")).build();
                    return routes.build();
                }
            }
        4>>.编写路主启动类
            @SpringBootApplication
            @EnableDiscoveryClient
            public class RouterConnectLoadbalanceHardcodeGateWay9527 {
                public static void main(String[] args) {
                    SpringApplication.run(RouterConnectLoadbalanceHardcodeGateWay9527.class, args);
                }
            }
2.YML文件配置方式
    1>.网关直接转发请求模式
        1>>.编写POM
            <dependencies>
                <dependency>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-starter-gateway</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.openatom</groupId>
                    <artifactId>springcloud-api-commons</artifactId>
                </dependency>
            </dependencies>
        2>>.编写YML
            server:
              port: 9527

            spring:
              application:
                name: SPRINGCLOUD-ROUTER-CONNECT-DIRECT-CONFIGURATION-GATEWAY9527
              cloud:
                gateway:
                  routes:
                    #第一个路由,多个路由依靠不同的路由ID区分
                    - id: payment_routh   #路由的ID，没有固定规则但要求唯一，建议配合服务名
                      uri: http://localhost          #匹配后提供服务的路由地址
                      predicates:
                        # 断言，路径相匹配的进行路由,可以匹配下面四个路径:
                        # 路径1:http://localhost:9527/consumer/payment/out/get/{id}
                        # 路径2:http://localhost:9527/consumer/payment/timeout/get/{id}
                        # 路径3:http://localhost:9527/consumer/payment/degradation_in_provider/get/{id}
                        # 路径3:http://localhost:9527/consumer/payment/circuitbreaker/get/{id}
                        - Path=/consumer/payment/**/get/**

                    #第二个路由,多个路由依靠不同的路由ID区分
                    #- id: payment_routh2   #路由的ID，没有固定规则但要求唯一，建议配合服务名
                    #  uri: http://localhost          #匹配后提供服务的路由地址
                    #  predicates:
                    #    - Path=/consumer/payment/**/get/**

            eureka:
              instance:
                hostname: ${spring.application.name}
              client: #服务提供者provider注册进eureka服务列表内
                service-url:
                  register-with-eureka: true
                  fetch-registry: true
                  defaultZone: http://localhost:7001/eureka

        3>>.编写路主启动类
            @SpringBootApplication
            @EnableDiscoveryClient
            public class RouterConnectDirectConfigurationGateWay9527 {
                public static void main(String[] args) {
                    SpringApplication.run(RouterConnectDirectConfigurationGateWay9527.class, args);
                }
            }
    2>.网关连接到注册中心负载均衡转发请求模式
        1>>.编写POM
            <dependencies>
                <dependency>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-starter-gateway</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.openatom</groupId>
                    <artifactId>springcloud-api-commons</artifactId>
                </dependency>
            </dependencies>
        2>>.编写YML
            server:
              port: 9527

            spring:
              application:
                name: SPRINGCLOUD-ROUTER-CONNECT-LOADBALANCE-CONFIGURATION-GATEWAY9527
              cloud:
                gateway:
                  discovery:
                    locator:
                      enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
                  routes:
                    #第一个路由,多个路由依靠不同的路由ID区分
                    - id: payment_routh   #路由的ID，没有固定规则但要求唯一，建议配合服务名
                      uri: lb://SPRINGCLOUD-CONSUMER-HYSTRIX-LOADBALANCE-OPENFEIGN-CONFIGURATION-ORDER80     #匹配后提供服务的路由地址,负载均衡前缀为lb://
                      predicates:
                        # 断言，路径相匹配的进行路由,可以匹配下面四个路径:
                        # 路径1:http://localhost:9527/consumer/payment/out/get/{id}
                        # 路径2:http://localhost:9527/consumer/payment/timeout/get/{id}
                        # 路径3:http://localhost:9527/consumer/payment/degradation_in_provider/get/{id}
                        # 路径3:http://localhost:9527/consumer/payment/circuitbreaker/get/{id}
                        - Path=/consumer/payment/**/get/**

                    #第二个路由,多个路由依靠不同的路由ID区分
                    #- id: payment_routh2   #路由的ID，没有固定规则但要求唯一，建议配合服务名
                    #  uri: http://localhost          #匹配后提供服务的路由地址
                    #  predicates:
                    #    - Path=/consumer/payment/**/get/**

            eureka:
              instance:
                hostname: ${spring.application.name}
              client: #服务提供者provider注册进eureka服务列表内
                service-url:
                  register-with-eureka: true
                  fetch-registry: true
                  defaultZone: http://localhost:7001/eureka
        3>>.编写路主启动类
            @SpringBootApplication
            @EnableDiscoveryClient
            public class RouterConnectLoadbalanceConfigurationGateWay9527 {
                public static void main(String[] args) {
                    SpringApplication.run(RouterConnectLoadbalanceConfigurationGateWay9527.class, args);
                }
            }
3.访问地址:
    http://localhost:9527/consumer/payment/circuitbreaker/get/1