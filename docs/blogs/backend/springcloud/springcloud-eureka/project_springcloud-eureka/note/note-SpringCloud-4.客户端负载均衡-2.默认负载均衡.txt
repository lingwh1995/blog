1.引入依赖
    注意:同搭建EurekaClient所需依赖一样,不需要引入任何额外的依赖,SpringCloud自身就有负载均衡相关组件
     <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!--引入公共的工程-->
        <dependency>
            <groupId>org.openatom</groupId>
            <artifactId>springcloud-api-commons</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
    </dependencies>
2.编写YML文件
    server:
      port: 80

    spring:
        application:
            name: SPRINGCLOUD-CONSUMER-LOADBALANCE-DEFAULT-ORDER80 #注意:服务名不要出现_
        devtools:
          restart:
            enabled: true
        logging:
          level: info

    eureka:
      client:
        register-with-eureka: true  #表示是否将自己注册进EurekaServer默认为true。
        fetchRegistry: true  #是否从EurekaServer抓取已有的注册信息，默认为true。服务提供者是单节点无所谓，是集群必须设置为true才能配合ribbon使用负载均衡，否则报异常No instances available for SPRINGCLOUD-PROVIDER-PAYMENT-SERVICE-CLUSTER
        service-url:
          #单机版
          defaultZone: http://localhost:7001/eureka
          #集群版
          #defaultZone: http://eureka7002:7002/eureka,http://eureka7003:7003/eureka,http://eureka7004:7004/eureka
      instance:
        instance-id: SPRINGCLOUD-CONSUMER-LOADBALANCE-DEFAULT-ORDER80 #Eureka仪表盘中Instances currently registered with Eureka.Status显示的内容
        prefer-ip-address: false #访问路径可以显示IP地址，点击Eureka仪表盘中Instances currently registered with Eureka.Status显示的内容地址栏是否显示IP地址

    #服务提供方信息
    service:
      provider:
        name: SPRINGCLOUD-PROVIDER-PAYMENT-SERVICE-CLUSTER  #服务提供方名称
        url: http://${service.provider.name} #服务提供方调用地址
3.给容器中注入RestTemplate
    @Configuration
    public class ApplicationContextConfig {
        @Bean
        //必须加这个注解,不加这个注解访问会报错
        @LoadBalanced
        public RestTemplate getRestTemplate(){
            return new RestTemplate();
        }
    }
3.访问地址:
    访问路径:http://localhost/consumer/payment/get/1
4.测试负载均衡效果
    轮询调用