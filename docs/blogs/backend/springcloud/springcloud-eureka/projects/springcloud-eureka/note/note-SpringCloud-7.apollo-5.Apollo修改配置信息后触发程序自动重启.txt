1.首先需要在SpringCloud项目中集成好Apollo
2.YML中添加配置
    server:
      tomcat:
        mbeanregistry:
          enabled: true
    management:
      endpoint:
        restart:
          enabled: true
3.编写监听器(注入RestartEndpoint这个类->然后编写重启程序的方法->当监听器监听到配置信息发生改变时调用重启程序的方法)
    @Component
    @Slf4j
    public class ApolloPropertiesChangedListener implements ApplicationContextAware {

        private ApplicationContext applicationContext;

        @Autowired
        private RestartEndpoint restartEndpoint;

        @ApolloConfigChangeListener
        private void someChangeHandler(ConfigChangeEvent changeEvent) {
            for (String key : changeEvent.changedKeys()) {
                ConfigChange change = changeEvent.getChange(key);
    //            log.info("Found change - {}", change.toString());
                //如果key符合特定情况,则重启应用程序
                isRestartApplication(change.getPropertyName());
            }
            // 更新相应的bean的属性值，主要是存在@ConfigurationProperties注解的bean
            this.applicationContext.publishEvent(new EnvironmentChangeEvent(changeEvent.changedKeys()));
        }

        @Override
        public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {
            this.applicationContext = applicationContext;
        }

        /**
         * 重启SpringBoot项目
         */
        public void isRestartApplication(String propertyName){
            List<String> propertyNames = new ArrayList<>();
            propertyNames.add("spring.application.name");
            if(propertyNames.contains(propertyName)){
                restartEndpoint.restart();
            }
        }
    }
4.测试监听器触发应用程序自动重启
    在Apollo配置界面修改配置信息,然后程序会在后台调用重启应用程序的方法,自行重启应用程序
5.特别特别注意
    使用Apollo监听器监听配置文件变化使得程序重启时一定要关闭devtools的热部署功能,否则会出问题
      devtools:
        restart:
          enabled: false