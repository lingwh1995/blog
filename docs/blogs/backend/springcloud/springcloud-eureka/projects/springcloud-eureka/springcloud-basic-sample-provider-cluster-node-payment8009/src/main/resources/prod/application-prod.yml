server:
  port: 8009 #访问端口
spring:
  application:
    name: SPRINGCLOUD-BASIC-SAMPLE-PROVIDER-PAYMENT-SERVICE-CLUSTER-PROD  #注意:服务名不要出现_
  devtools: #热部署开关
    restart:
      enabled: true
  # 将Client作为服务注册到SpringBootAdmin Server端，通过Server来监听项目的运行情况
  boot:
    admin:
      client:
        url: http://192.168.0.4:${server.port}
  logging:
    level: info
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource            # 当前数据源操作类型
    driver-class-name: com.mysql.cj.jdbc.Driver              # mysql驱动包
    url: jdbc:mysql://192.168.0.5:3306/payment?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: Mysql123456

eureka:
  client:
    register-with-eureka: true  #表示是否将自己注册进EurekaServer默认为true。
    fetchRegistry: true  #是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    service-url:
      #单机版
      defaultZone: http://192.168.0.4:7005/eureka
      #集群版
      #defaultZone: http://eureka7002:7002/eureka,http://eureka7003:7003/eureka,http://eureka7004:7004/eureka
  instance:
    instance-id: SPRINGCLOUD-PROVIDER-PAYMENT-SERVICE-CLUSTER-NODE-PAYMENT8009-PROD #Eureka仪表盘中Instances currently registered with Eureka.Status显示的内容
    #当前微服务所在部署机器ip
    ip-address: 192.168.0.4
    prefer-ip-address: true  #访问路径可以显示IP地址，点击Eureka仪表盘中Instances currently registered with Eureka.Status显示的内容地址栏是否显示IP地址
    lease-renewal-interval-in-seconds: 30 #Eureka客户端向服务端发送心跳的时间间隔，单位为秒(默认是30秒)
    lease-expiration-duration-in-seconds: 90 #Eureka服务端在收到最后一次心跳后等待时间上限，单位为秒(默认是90秒)，超时将剔除服务

mybatis:
  mapperLocations: classpath:mapper/*.xml
  type-aliases-package: org.openatom.springcloud.entities    # 所有Entity别名类所在包


#配置文件修改说明-------------------------------------------------:开始
#注意:不同的部署环境需要修改的配置
#   1.${logback.path}  #修改日志存放位置,Linxu为/，Windows为\
#       修改原因: Linux和Windows目录结构不同
#配置文件修改说明-------------------------------------------------:结束

#自定义日志配置文件路径
logging:
  config: classpath:logback-custom.xml
  path: /logs #所有日志存放在位置,加上\方便Linux环境下配置
  level:
    root: info #全局日志输出级别

logback:
  log-name: ${spring.application.name}
  append: false #是否启用append(追加到已经存在日志文件尾部),true:重启项目会追加新日志到之前日志,false:重启项目会清空之前的日志
  immediate-flush: true #是否启用immediateFlush(立即刷新),true:重启项目自动追加,false:重启项目会情况之前的日志
  deploy-machine-ip: ${eureka.instance.ip-address} #当前微服务所在部署机器ip

#logstash相关配置:开始
logstash:
  host: 192.168.0.4:5044 # logstash地址
  index: '@project.parent.artifactId@' # es中index名称
#logstash相关配置:结束

#actuator监控:开始
#通过下面的配置启用所有的监控端点，默认情况下，这些端点是禁用的；
management:
  endpoints:
    web:
      exposure:
        include: '*'
    enabled-by-default: true
  endpoint:
    health:
      show-details: always # 访问/actuator/health时，显示详细信息，而不是仅仅显示"status": "UP"
    # 日志文件路径：特别注意,此处无法配置日志文件路径,因为rancher会生成虚拟ip,这个虚拟ip是无法在这里获取的,
    #           但是虚拟ip是路径的一部分,所以这个路径无法拼接出来,所以这里无法配置日志文件路径
    #logfile:
    #  external-file:
#actuator监控:结束